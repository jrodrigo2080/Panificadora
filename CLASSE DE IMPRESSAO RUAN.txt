package models;

import java.io.ByteArrayInputStream;
import java.io.InputStream;

import javax.print.Doc;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintException;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.SimpleDoc;

public class Impressao {
    
    // variavel estatica porque será utilizada por inumeras threads
    private static PrintService impressora;

   public Impressao() {

       detectaImpressoras();

   }

   // O metodo verifica se existe impressora conectada e a
   // define como padrao.
   public void detectaImpressoras() {

       try {

           DocFlavor df = DocFlavor.SERVICE_FORMATTED.PRINTABLE;
           PrintService[] ps = PrintServiceLookup.lookupPrintServices(df, null);
           for (PrintService p: ps) {

               System.out.println("Impressora encontrada: " + p.getName());

               if (p.getName().contains("CAIXA"))  {

                    System.out.println("Impressora Selecionada: " + p.getName());
                   impressora = p;
                   break;

               }

           }

       } catch (Exception e) {

           e.printStackTrace();

       }

   }

   public synchronized boolean imprime(String texto) {

       // se nao existir impressora, entao avisa usuario
       // senao imprime texto
       if (impressora == null) {

           String msg = "Nennhuma impressora foi encontrada. Instale uma impressora padrão \r\n(Generic Text Only) e reinicie o programa.";
               System.out.println(msg);

       } else {

           try {

               DocPrintJob dpj = impressora.createPrintJob();
               InputStream stream = new ByteArrayInputStream(texto.getBytes());

               DocFlavor flavor = DocFlavor.INPUT_STREAM.AUTOSENSE;
               Doc doc = new SimpleDoc(stream, flavor, null);
               dpj.print(doc, null);

               return true;

           } catch (PrintException e) {

               e.printStackTrace();

           }

       }

       return false;

   }

}
//EXPLICAÇÃO
Olhae man
ai no método onde você quer fazer a impressão
Impressao impr = new Impressao();
                impr.imprime(impressao);
impressão é onde tu vai passar tua notinha como parametro para imprimir
if (p.getName().contains("CAIXA"))  { -> eu usei o nome da impressora que tava instalado no meu PC aqui
no caso a CAIXA
a impressora conter o nome CAIXA ele setava como padrão e usava para imprimir
